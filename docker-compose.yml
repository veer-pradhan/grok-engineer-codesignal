version: '3.8'

services:
  # Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: sdr_system
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://postgres:password@db:5432/sdr_system
      GROK_API_KEY: ${GROK_API_KEY:-INSERT-API-KEY-HERE}
      GROK_API_BASE_URL: https://api.x.ai/v1
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      VITE_API_BASE_URL: http://localhost:8000
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development frontend (uncomment for development)
  # frontend-dev:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile.dev
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - backend
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   environment:
  #     VITE_API_BASE_URL: http://localhost:8000

volumes:
  postgres_data:

networks:
  default:
    name: sdr-network
